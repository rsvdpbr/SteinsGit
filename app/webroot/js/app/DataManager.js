// Generated by CoffeeScript 1.3.3

dojo.provide('app.DataManager');

dojo.require('dojox.encoding.digests.MD5');

dojo.declare('app.DataManager', null, {
  cache: {},
  defaultPostData: {},
  constructor: function() {
    return this.setSubscribe();
  },
  setSubscribe: function() {
    dojo.subscribe('DataManager/clearCache', this, function() {
      return this.cache = {};
    });
    dojo.subscribe('DataManager/setDefaultPostData', this, this.setDefaultPostData);
    return dojo.subscribe('DataManager/fetch', this, this.fetch);
  },
  setDefaultPostData: function(key, value) {
    return this.defaultPostData[key] = value;
  },
  getHashKey: function(dataname, postdata) {
    var data;
    data = dojo.toJson([dataname, postdata]);
    return dojox.encoding.digests.MD5(data);
  },
  fetch: function(dataname, postdata, func, context, force) {
    var hashkey, that;
    dojo.publish('layout/LAN/fadeIn', ['サーバーからデータを取得中']);
    postdata = dojo.mixin(dojo.clone(this.defaultPostData), postdata);
    hashkey = this.getHashKey(dataname, postdata);
    if ((this.cache[hashkey] != null) || ((force != null) && foce === true)) {
      dojo.publish('layout/LAN/setNotice', ['ローカルキャッシュからデータを取得完了']);
      dojo.publish('layout/LAN/fadeOut');
      return func.apply(context, [dojo.clone(this.cache[hashkey])]);
    }
    that = this;
    return dojo.xhrPost({
      url: dataname + '.json',
      handleAs: 'json',
      content: postdata,
      load: function(data) {
        console.log('LOAD COMPLETE', dataname, data);
        if (data.error.length > 0) {
          throw data.error[0];
        }
        that.cache[hashkey] = data.result;
        func.apply(context, [dojo.clone(data.result)]);
        dojo.publish('layout/LAN/setNotice', ['サーバーからデータの取得を完了']);
        return dojo.publish('layout/LAN/fadeOut');
      },
      error: function(error) {
        console.log('ERROR OCCURRED', dataname, error);
        dojo.publish('layout/LAN/setNotice', ['データ取得中にエラーが発生']);
        return dojo.publish('layout/LAN/fadeOut');
      }
    });
  }
});
