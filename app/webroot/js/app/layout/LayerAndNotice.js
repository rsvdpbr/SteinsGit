// Generated by CoffeeScript 1.3.3

dojo.provide('app.layout.LayerAndNotice');

dojo.require('dojo.date.locale');

dojo.declare('app.layout.LayerAndNotice', null, {
  count: 0,
  logs: [],
  commonLogs: [],
  components: {
    layer: null,
    loading: null,
    notice: null
  },
  constructor: function() {
    this.setLayer();
    this.setNoticeArea();
    this.setCommonNotice();
    this.setString();
    return this.setSubscribe();
  },
  setLayer: function() {
    this.components.layer = $('<div id="layer"></div>');
    return $(this.components.layer).css({
      'position': 'absolute',
      'zIndex': '1000',
      'width': '100%',
      'height': '100%',
      'backgroundColor': '#555',
      'opacity': '0.5',
      'backgroundImage': 'url(img/loading.gif)',
      'backgroundRepeat': 'no-repeat',
      'backgroundPosition': 'center center',
      'display': 'none'
    }).appendTo('body');
  },
  setNoticeArea: function() {
    this.components.loading = $('<div id="notice"></div>');
    $(this.components.loading).css({
      'zIndex': '1001',
      'position': 'absolute',
      'width': '100%',
      'textAlign': 'center',
      'top': '50%',
      'margin-top': '-9px',
      'font-weight': 'bold',
      'font-size': '18px',
      'color': '#D2EAF5'
    }).appendTo(this.components.layer);
    this.components.string = $('<div id="noticeString"></div>');
    $(this.components.string).appendTo(this.components.loading);
    this.components.notice = $('<div id="noticeArea"></div>');
    return $(this.components.notice).css({
      'margin-top': '80px',
      'font-size': '15px'
    }).appendTo(this.components.loading);
  },
  setCommonNotice: function() {
    this.components.commonNotice = $('<div id="commonNotice"></div>');
    return $(this.components.commonNotice).css({
      'zIndex': '1002',
      'position': 'absolute',
      'width': '40%',
      'height': '100px',
      'opacity': '0.5',
      'bottom': '10px',
      'right': '20px',
      'font-weight': 'bold',
      'font-size': '13px',
      'padding': '4px 12px',
      'color': '#D2EAF5',
      'backgroundColor': '#555',
      'border': '1px solid #aaa',
      'display': 'none',
      'order-radius': '6px',
      '-webkit-border-radius': '6px',
      '-moz-border-radius': '6px'
    }).appendTo('body');
  },
  addCommonNotice: function(notice, timeout) {
    var node, noticeCount,
      _this = this;
    noticeCount = $(this.components.commonNotice).children().length;
    timeout = timeout || (5000 + noticeCount * 300);
    this.commonLogs.push(notice);
    if ($(this.components.commonNotice).css('display') === 'none') {
      $(this.components.commonNotice).fadeIn(200);
    }
    node = $('<div style="opacity:1.0;">' + notice + '</div>').hide();
    $(this.components.commonNotice).append(node);
    setTimeout((function() {
      var that;
      that = node;
      return function() {
        return $(that).fadeOut(200, function() {
          var handler;
          $(that).empty().show().css({
            height: '20px'
          });
          return handler = setInterval(function() {
            var height;
            height = $(that).css('height').match(/^([0-9]+)px$/)[1] - 0;
            $(that).css('height', (height - 1) + 'px');
            if (height < 1) {
              clearInterval(handler);
              $(that).remove();
              if ($(_this.components.commonNotice).children().length === 0) {
                return $(_this.components.commonNotice).fadeOut(150);
              }
            }
          }, 25);
        });
      };
    })(), timeout);
    return $(node).show(200);
  },
  setSubscribe: function() {
    dojo.subscribe('layout/LAN/fadeIn', this, this.fadeIn);
    dojo.subscribe('layout/LAN/fadeOut', this, this.fadeOut);
    dojo.subscribe('layout/LAN/setString', this, this.setString);
    dojo.subscribe('layout/LAN/setNotice', this, this.setNotice);
    dojo.subscribe('layout/LAN/clearNotice', this, this.clearNotice);
    return dojo.subscribe('layout/LAN/addCommonNotice', this, this.addCommonNotice);
  },
  fadeIn: function(string) {
    if (string != null) {
      this.setNotice(string);
    }
    this.count++;
    console.log('layer> now count is ' + this.count);
    return $(this.components.layer).fadeIn(50);
  },
  fadeOut: function(context, func) {
    var _this = this;
    this.count--;
    console.log('layer> now count is ' + this.count);
    if (this.count === 0) {
      console.log('layer> count is zero, fade-out');
      return $(this.components.layer).fadeOut(300, function() {
        _this.clearNotice();
        if (func != null) {
          context = context != null ? context : _this;
          return func.apply(context);
        }
      });
    }
  },
  setString: function(string) {
    if (!(string != null)) {
      string = "Loading";
    }
    return $(this.components.string).text(string);
  },
  setNotice: function(string) {
    this.logs.push({
      'time': dojo.date.locale.format(new Date(), "yyyy/MM/dd HH:mm"),
      'string': string
    });
    return $(this.components.notice).text(string);
  },
  clearNotice: function() {
    return $(this.components.notice).text('');
  }
});
