// Generated by CoffeeScript 1.3.3

dojo.provide('app.list.CommitList');

dojo.require('app.list.CommitListUnit');

dojo.require('dijit.layout._LayoutWidget');

dojo.declare('app.list.CommitList', [dijit.layout._LayoutWidget, dijit._Templated], {
  widgetsInTemplate: true,
  templateString: dojo.cache('app.list', 'templates/CommitList.html'),
  style: 'width:100%; height:100%; padding:0; margin:0;',
  title: 'Commit List',
  limit: 100,
  page: 0,
  commits: [],
  constructor: function() {
    this.inherited(arguments);
    dojo.publish('Mediater/register', ['layout/Header/selectBranch', this, this.onSelectBranch]);
    return dojo.publish('Mediater/register', ['layout/Header/clearBranch', this, this.onClearBranch]);
  },
  postCreate: function() {
    this.inherited(arguments);
    return this.onClearBranch();
  },
  onClearBranch: function() {
    var string;
    this.domContents.destroyDescendants();
    string = '<div style="padding:8px;text-align:center;">no branch selected</span>';
    return this.domContents.setContent(string);
  },
  onSelectBranch: function(branch) {
    this.page = 0;
    this.branch = branch;
    return this.fetchCommitList();
  },
  fetchCommitList: function() {
    this.domContents.destroyDescendants();
    this.commits = [];
    return dojo.publish('DataManager/fetch', [
      'getCommitList', {
        context: this,
        postdata: {
          branch: this.branch,
          limit: this.limit,
          page: this.page
        }
      }, function(data) {
        var clu, commit, _i, _len, _ref;
        console.log('Commits', data, this);
        this.getPrevHtml();
        _ref = data.commits;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          commit = _ref[_i];
          clu = new app.list.CommitListUnit(commit);
          clu.placeAt(this.domContents);
          this.commits.push(clu);
        }
        return this.getNextHtml();
      }
    ]);
  },
  getPrevHtml: function() {
    var _this = this;
    if (this.page > 0) {
      this.domPrev = $('<div>前のページに戻る</div>').css({
        'width': '100%',
        'height': '32px',
        'padding': '0',
        'margin': '0',
        'borderBottom': '1px solid #aaa',
        'cursor': 'pointer',
        'textAlign': 'center',
        'color': '#33a',
        'line-height': '32px'
      });
      $(this.domPrev).hover(function() {
        return $(_this.domPrev).css('backgroundColor', '#ffe');
      }, function() {
        return $(_this.domPrev).css('backgroundColor', '#fff');
      });
      $(this.domPrev).bind('click', function() {
        _this.page--;
        return _this.fetchCommitList();
      });
      return $(this.domContents.domNode).append(this.domPrev);
    }
  },
  getNextHtml: function() {
    var _this = this;
    if (this.limit === this.commits.length) {
      this.domNext = $('<div>次のページに進む</div>').css({
        'width': '100%',
        'height': '32px',
        'padding': '0',
        'margin': '0',
        'cursor': 'pointer',
        'textAlign': 'center',
        'color': '#33a',
        'line-height': '32px'
      });
      $(this.domNext).hover(function() {
        return $(_this.domNext).css('backgroundColor', '#ffe');
      }, function() {
        return $(_this.domNext).css('backgroundColor', '#fff');
      });
      $(this.domNext).bind('click', function() {
        _this.page++;
        return _this.fetchCommitList();
      });
      return $(this.domContents.domNode).append(this.domNext);
    }
  }
});
